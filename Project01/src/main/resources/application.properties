#ê°ë° ìë²ì¤ì 
server.port=9092

#viewìì¹ ì¤ì 
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#context-pathì¤ì 
server.servlet.context-path=/ROOT

#íê¸ì¤ì 
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
server.tomcat.uri-encoding=UTF-8

#ìë² ìëí
spring.devtools.livereload.enabled=true

#ìë²ì£¼ì,í¬í¸ë²í¸,ìì´ë,ìí¸,SID(ê¸°ë³¸ê° xe)
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@1.234.5.158:11521:xe
spring.datasource.username=id117
spring.datasource.password=pw117

#오라클 데이터베이스 접속 불가능 할 때,
#---------------------------------------------------
# h2 DB 사용 하기
# 메모리 기반으로 실행할 때마다 데이터가 초기화됨.
#spring.datasource.url=jdbc:h2:mem:testdb           

# DB가 저장될 폴더 지정 ex) c:/tmp/h2_db
#spring.datasource.url=jdbc:h2:file:C:/tmp/h2_db     
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#---------------------------------------------------

#consoleì°½ì sqlë¬¸ì ì¶ë ¥
spring.jpa.show-sql=true

#íì¼ìë¡ë
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB

#ormì¤ì  => ê°ì²´ì dbì ë°ì´í°ë¥¼ ìëì¼ë¡ ë§¤íí´ì¤ë¤.
#entityë¥¼ ìë¡ ë§ë¤ ë ë§ë¤ íë²ë§ ì¤íí ë¤ ë¤ì ì£¼ìì ê±¸ì´ì¤ë¤. => íì±íëë©´ ë°ì´í°ê° ì´ê¸°í,ìì±ì´ ìëì¼ë¡ ë°ë³µëë¯ë¡
spring.jpa.hibernate.ddl-auto=update
